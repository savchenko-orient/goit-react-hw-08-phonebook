{"version":3,"file":"static/js/443.dde9f934.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactEditor/ContactEditor.jsx","../node_modules/@chakra-ui/icons/dist/chunk-DYUZQHG7.mjs","../node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs","components/Contact/Contact.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/Phonebook/Phonebook.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;","import { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { FormControl, FormLabel, Input, Button, Box } from '@chakra-ui/react';\n\nexport const ContactEditor = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        if (name && number !== '') {\n            dispatch(addContact({ name: name, number: number }));\n            form.reset();\n            return;\n        }\n        alert('Contact cannot be empty. Enter some text!');\n    };\n\n    return (\n        <Box\n            justifyContent='center'\n            display='flex'\n            mt= '50px'\n        >\n        <form onSubmit={handleSubmit}>\n            <FormControl>\n                <FormLabel>\n                    Name\n                    <Input\n                        name=\"name\"\n                        type='text'\n                        placeholder='Please enter the name'\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        required\n                    />\n                </FormLabel>\n                <FormLabel>\n                    Number\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        placeholder='Please enter phone number'\n                        minLength=\"7\"\n                        maxLength=\"10\"\n                    />\n                </FormLabel>\n                <Button\n                    type='submit'\n                    bg='BtnBgColor'\n                >\n                    Add contact\n                </Button>\n            </FormControl>\n            </form>\n        </Box>\n    )\n};","// src/Close.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n});\n\nexport {\n  CloseIcon\n};\n","import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n","import { useDispatch } from \"react-redux\"\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { Text, Button } from \"@chakra-ui/react\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\n\nexport const Contact = ({ name, id, number }) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    return (\n        <>\n            <Text\n                as='p'\n                ml='15px'\n            >\n                {name}\n            </Text>\n            <Text\n                as='p'\n            >\n                {number}\n            </Text>\n            <Button\n                display='flex'\n                justifyContent='center'\n                alignItems='center'\n                type=\"button\"\n                onClick={handleDelete}\n                bg='black'\n            >\n                <CloseIcon\n                boxSize={5} color='red.500'\n                />\n            </Button>\n        </>\n    );\n};","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","\nimport { Contact } from \"components/Contact/Contact\";\nimport { List, ListItem } from \"@chakra-ui/react\";\n\n\nexport const Phonebook = ({ filterContacts }) => {\n    return (\n        <>\n            <List\n                display='flex'\n                flexDir='column'\n                gap='10px'\n                alignItems='center'\n            >\n                {filterContacts.map(contact => (\n                    <ListItem\n                        display='flex'\n                        justifyContent='space-between'\n                        color='HoverTextColor'\n                        alignItems='center'\n                        bg='black'\n                        borderRadius='6px'\n                        width={[ 290, 400, 550]}\n                    >\n                        <Contact id={contact.id} name={contact.name} number={contact.number} />\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    );\n};","import { useDispatch } from \"react-redux\";\nimport { setFilterContacts } from \"redux/contacts/filterSlice\";\nimport { Box, FormLabel, Input } from \"@chakra-ui/react\";\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const onChange = event => {\n        const filtered = event.target.value;\n        dispatch(setFilterContacts(filtered));\n    };\n\n\n    return (\n        <Box\n            justifyContent='center'\n            display='flex'\n            mt='50px'\n        >\n            <FormLabel\n                textAlign='center'\n                justifyContent='center'\n                display='flex'\n                flexDirection='column'\n                minWidth='292px'\n            >\n                Fint contacts by name\n                <Input\n                    type=\"text\"\n                    name=\"filter\"\n                    onChange={onChange}\n                >\n                </Input>\n            </FormLabel>\n        </Box>\n    );\n};","import { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\nimport { ContactEditor } from \"components/ContactEditor/ContactEditor\";\nimport { Phonebook } from \"components/Phonebook/Phonebook\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const filterFromStore = useSelector(state => state.filter);\n    const contactsFromStore = useSelector(state => state.contacts.items);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const getFilterContacts = () => {\n        return contactsFromStore.filter(el =>\n            el.name.toLowerCase().includes(filterFromStore.toLowerCase())\n        );\n    };\n\n\n    return (\n        <>\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n            <ContactEditor />\n            <div>{isLoading && 'Request in progress...'}</div>\n            <Filter />\n            <Phonebook\n                filterContacts={getFilterContacts()}\n            />\n        </>\n    );\n};"],"names":["selectIsLoading","state","contacts","isLoading","ContactEditor","dispatch","useDispatch","justifyContent","display","mt","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","addContact","reset","alert","I","type","placeholder","pattern","required","title","minLength","maxLength","bg","CloseIcon","options","viewBox","pathDefinition","d","displayName","defaultProps","path","Children","Comp","forwardRef","props","ref","jsx","Icon","children","length","fill","createIcon","Contact","id","as","ml","alignItems","onClick","deleteContact","boxSize","color","createContext","errorMessage","ListStylesProvider","useListStyles","List","styles","useMultiStyleConfig","omitThemingProps","styleType","stylePosition","spacing","rest","validChildren","filter","child","isValidElement","getValidChildren","spacingStyle","chakra","listStyleType","listStylePosition","role","__css","container","marginStart","ListItem","item","icon","Phonebook","filterContacts","flexDir","gap","map","contact","borderRadius","width","Filter","textAlign","flexDirection","minWidth","onChange","event","filtered","target","setFilterContacts","Contacts","useSelector","filterFromStore","contactsFromStore","items","useEffect","fetchContacts","Helmet","el","toLowerCase","includes"],"sourceRoot":""}